{\rtf1\ansi\ansicpg1252\cocoartf2818
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\froman\fcharset0 Times-Bold;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww12720\viewh7800\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs48 \cf0 \
\pard\pardeftab720\partightenfactor0

\f1\b \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 Working with Kafka (writing)
\f0\b0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \

\f1\b\fs36 Files:
\f0\b0\fs48 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\fs26 \cf0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 docker-compose.yml
\fs24 : defines and starts the Kafka environment (Kafka broker, Zookeeper, and Kafka UI) in Docker.\
\ls1\ilvl0
\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 producer.py
\fs24 : python script that reads reviews from a CSV file, updates the timestamp to the current time, and sends them to the Kafka topic at a fixed rate (10\'9615 messages per second).\
\ls1\ilvl0
\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 requirements.txt
\fs24 : lists Python dependencies required by 
\fs26 producer.py
\fs24  (
\fs26 kafka-python
\fs24 ).\
\ls1\ilvl0
\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 Dockerfile
\fs24 : builds a container image for the producer, installing dependencies and copying the producer script inside.\
\ls1\ilvl0
\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 build_producer.sh
\fs24 : shell script to build the Docker image for the Kafka producer.\
\ls1\ilvl0
\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 run_producer.sh
\fs24 : shell script to run the producer container in the same Docker network as Kafka, mounting the CSV file and passing environment variables.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}amazon_reviews.csv: data base. \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\partightenfactor0
\cf0 \
\
\
\pard\pardeftab720\partightenfactor0

\f1\b\fs36 \cf0 \strokec3 Check if the topic exists
\f0\b0\fs24 \
docker exec -it kafka \\\
  kafka-topics.sh \\\
  --bootstrap-server kafka:9092 \\\
  --list\
\

\f1\b\fs36 View a few messages from the topic
\f0\b0\fs24 \
docker exec -it kafka \\\
  kafka-console-consumer.sh \\\
  --bootstrap-server kafka:9092 \\\
  --topic tweets \\\
  --from-beginning \\\
  --max-messages 5\
\

\f1\b\fs36 Count the number of messages
\f0\b0\fs24 \
docker exec -it kafka \\\
  kafka-console-consumer.sh \\\
  --bootstrap-server kafka:9092 \\\
  --topic tweets \\\
  --from-beginning --timeout-ms 5000 > /tmp/tweets.dump\
\

\f1\b\fs36 Check consumer groups
\f0\b0\fs24 \
docker exec -it kafka \\\
  kafka-consumer-groups.sh \\\
  --bootstrap-server kafka:9092 \\\
  --all-groups --describe\
\
\

\f1\b\fs36 Screenshots
\f0\b0\fs24 \
}