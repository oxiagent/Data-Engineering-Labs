
Working with Kafka (writing)

Files:
	•	docker-compose.yml: defines and starts the Kafka environment (Kafka broker, Zookeeper, and Kafka UI) in Docker.
	•	producer.py: python script that reads reviews from a CSV file, updates the timestamp to the current time, and sends them to the Kafka topic at a fixed rate (10–15 messages per second).
	•	requirements.txt: lists Python dependencies required by producer.py (kafka-python).
	•	Dockerfile: builds a container image for the producer, installing dependencies and copying the producer script inside.
	•	build_producer.sh: shell script to build the Docker image for the Kafka producer.
	•	run_producer.sh: shell script to run the producer container in the same Docker network as Kafka, mounting the CSV file and passing environment variables.
	•	amazon_reviews.csv: data base. 



Check if the topic exists
docker exec -it kafka \
  kafka-topics.sh \
  --bootstrap-server kafka:9092 \
  --list

View a few messages from the topic
docker exec -it kafka \
  kafka-console-consumer.sh \
  --bootstrap-server kafka:9092 \
  --topic tweets \
  --from-beginning \
  --max-messages 5

Count the number of messages
docker exec -it kafka \
  kafka-console-consumer.sh \
  --bootstrap-server kafka:9092 \
  --topic tweets \
  --from-beginning --timeout-ms 5000 > /tmp/tweets.dump

Check consumer groups
docker exec -it kafka \
  kafka-consumer-groups.sh \
  --bootstrap-server kafka:9092 \
  --all-groups --describe


Screenshots
